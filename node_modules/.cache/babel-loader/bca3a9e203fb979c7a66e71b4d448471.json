{"ast":null,"code":"import { Component } from 'react';\nimport axios from 'axios';\nexport default class Сontrollers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.FetchOpenWeather = cityName => {\n      console.log('Метод запущен'); // this.setState({...this.state, isFetching: true})\n\n      const apiKey = 'b6907d289e10d714a6e88b30761fae22';\n      axios.get(\"http://openweathermap.org/data/2.5/weather?q=\".concat(cityName, \"&appid=\").concat(apiKey, \"&units=metric\")).then(response => this.setState({\n        newTemp: response.data.main.temp,\n        isFetching: false\n      })).catch(e => console.log(e));\n    };\n\n    this.state = {\n      isFetching: true,\n      newTemp: ''\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/brusnichkin/Project/LAD/weather-widget/src/Сontrollers/Сontrollers.jsx"],"names":["Component","axios","Сontrollers","constructor","props","FetchOpenWeather","cityName","console","log","apiKey","get","then","response","setState","newTemp","data","main","temp","isFetching","catch","e","state"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,gBARmB,GAQCC,QAAD,IAAc;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAD+B,CAE/B;;AACA,YAAMC,MAAM,GAAG,kCAAf;AACAR,MAAAA,KAAK,CAACS,GAAN,wDAA0DJ,QAA1D,oBAA4EG,MAA5E,oBACGE,IADH,CACQC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,IAA7B;AAC9BC,QAAAA,UAAU,EAAE;AADkB,OAAd,CADpB,EAGKC,KAHL,CAGWC,CAAC,IAAIb,OAAO,CAACC,GAAR,CAAYY,CAAZ,CAHhB;AAID,KAhBkB;;AAEjB,SAAKC,KAAL,GAAY;AACVH,MAAAA,UAAU,EAAE,IADF;AAEVJ,MAAAA,OAAO,EAAC;AAFE,KAAZ;AAID;;AAPgD","sourcesContent":["import { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Сontrollers extends Component {\n  constructor(props) {\n    super(props)\n    this.state ={\n      isFetching: true,\n      newTemp:''\n    }\n  }\n  \n  FetchOpenWeather = (cityName) => {\n    console.log('Метод запущен')\n    // this.setState({...this.state, isFetching: true})\n    const apiKey = 'b6907d289e10d714a6e88b30761fae22';\n    axios.get(`http://openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`)\n      .then(response => this.setState({newTemp: response.data.main.temp, \n        isFetching: false}))\n        .catch(e => console.log(e));\n  }\n}"]},"metadata":{},"sourceType":"module"}