{"ast":null,"code":"import _objectSpread from \"/home/brusnichkin/Project/LAD/weather-widget/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\n\nfunction FetchOpenWeather(cityName) {\n  this.setState(_objectSpread({}, this.state, {\n    isFetching: true\n  }));\n  const apiKey = 'b6907d289e10d714a6e88b30761fae22';\n  let myTemp;\n  axios.get(\"http://openweathermap.org/data/2.5/weather?q=\".concat(cityName, \"&appid=\").concat(apiKey, \"&units=metric\")).then(response => {\n    myTemp = response.data.main.temp;\n  }).then(result => this.setState({\n    temp: result,\n    isFetching: false\n  })).catch(e => console.log(e));\n}\n\nexport default FetchOpenWeather;","map":{"version":3,"sources":["/home/brusnichkin/Project/LAD/weather-widget/src/FetchOpenWeather/FetchOpenWeather.jsx"],"names":["axios","FetchOpenWeather","cityName","setState","state","isFetching","apiKey","myTemp","get","then","response","data","main","temp","result","catch","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AAChC,OAAKC,QAAL,mBAAkB,KAAKC,KAAvB;AAA8BC,IAAAA,UAAU,EAAE;AAA1C;AACA,QAAMC,MAAM,GAAG,kCAAf;AACA,MAAIC,MAAJ;AACAP,EAAAA,KAAK,CAACQ,GAAN,wDAA0DN,QAA1D,oBAA4EI,MAA5E,oBACGG,IADH,CACQC,QAAQ,IAAI;AAChBH,IAAAA,MAAM,GAAGG,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,IAA5B;AACD,GAHH,EAIGJ,IAJH,CAIQK,MAAM,IAAI,KAAKX,QAAL,CAAc;AAACU,IAAAA,IAAI,EAAEC,MAAP;AAC5BT,IAAAA,UAAU,EAAE;AADgB,GAAd,CAJlB,EAMKU,KANL,CAMWC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CANhB;AAOH;;AAED,eAAef,gBAAf","sourcesContent":["import axios from 'axios';\n\nfunction FetchOpenWeather(cityName) {\n    this.setState({...this.state, isFetching: true})\n    const apiKey = 'b6907d289e10d714a6e88b30761fae22';\n    let myTemp;\n    axios.get(`http://openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`)\n      .then(response => {\n        myTemp = response.data.main.temp\n      })\n      .then(result => this.setState({temp: result, \n        isFetching: false}))\n        .catch(e => console.log(e));\n}\n\nexport default FetchOpenWeather;"]},"metadata":{},"sourceType":"module"}