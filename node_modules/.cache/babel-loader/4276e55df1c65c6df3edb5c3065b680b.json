{"ast":null,"code":"import _objectSpread from \"/home/brusnichkin/Project/LAD/weather-widget/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/brusnichkin/Project/LAD/weather-widget/src/AirTemperature/AirTemperature.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class AirTemperature extends Component {\n  constructor(props) {\n    super(props);\n\n    this.FetchOpenWeather = cityName => {\n      this.setState(_objectSpread({}, this.state, {\n        isFetching: true\n      }));\n      const apiKey = 'b6907d289e10d714a6e88b30761fae22';\n      axios.get(\"http://openweathermap.org/data/2.5/weather?q=\".concat(cityName, \"&appid=\").concat(apiKey, \"&units=metric\")).then(response => this.setState({\n        newTemp: response.data.main.temp,\n        isFetching: false\n      })).catch(e => console.log(e));\n    };\n\n    this.state = {\n      isFetching: '',\n      newTemp: ''\n    };\n  }\n\n  componentDidMount() {\n    this.FetchOpenWeather(this.props.city);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.state.newTemp);\n  }\n\n}","map":{"version":3,"sources":["/home/brusnichkin/Project/LAD/weather-widget/src/AirTemperature/AirTemperature.jsx"],"names":["React","Component","axios","AirTemperature","constructor","props","FetchOpenWeather","cityName","setState","state","isFetching","apiKey","get","then","response","newTemp","data","main","temp","catch","e","console","log","componentDidMount","city","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAClDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,gBARmB,GAQCC,QAAD,IAAc;AAC7B,WAAKC,QAAL,mBAAkB,KAAKC,KAAvB;AAA8BC,QAAAA,UAAU,EAAE;AAA1C;AACA,YAAMC,MAAM,GAAG,kCAAf;AACAT,MAAAA,KAAK,CAACU,GAAN,wDAA0DL,QAA1D,oBAA4EI,MAA5E,oBACCE,IADD,CACMC,QAAQ,IAAI,KAAKN,QAAL,CAAc;AAACO,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,IAA7B;AAC5BR,QAAAA,UAAU,EAAE;AADgB,OAAd,CADlB,EAGKS,KAHL,CAGWC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAHhB;AAIH,KAfkB;;AAEf,SAAKX,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETK,MAAAA,OAAO,EAAC;AAFC,KAAb;AAIH;;AAWDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKjB,gBAAL,CAAsB,KAAKD,KAAL,CAAWmB,IAAjC;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKhB,KAAL,CAAWM,OAAjB,CADJ;AAGH;;AAzBiD","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class AirTemperature extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isFetching: '',\n            newTemp:''\n        };\n    }\n\n    FetchOpenWeather = (cityName) => {\n        this.setState({...this.state, isFetching: true})\n        const apiKey = 'b6907d289e10d714a6e88b30761fae22';\n        axios.get(`http://openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`)\n        .then(response => this.setState({newTemp: response.data.main.temp, \n            isFetching: false}))\n            .catch(e => console.log(e));\n    }\n\n    componentDidMount() {\n        this.FetchOpenWeather(this.props.city)\n    }\n    render() {\n        return(\n            <div>{this.state.newTemp}</div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}