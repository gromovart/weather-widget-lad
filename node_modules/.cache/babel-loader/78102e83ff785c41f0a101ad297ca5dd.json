{"ast":null,"code":"var _jsxFileName = \"/home/brusnichkin/Project/LAD/weather-widget/src/App.js\";\nimport React, { Component } from 'react';\nimport Wrapper from './Wrapper/Wrapper';\nimport WeatherShow from './WeatherShow/WeatherShow';\nimport InputCity from './InputCity/InputCity';\nimport FetchOpenWeather from './FetchOpenWeather/FetchOpenWeather';\nexport default class App extends Component {\n  constructor(props) {\n    super();\n\n    this.newCity = userCity => {\n      this.setState(prevState => ({\n        cities: this.state.cities\n      }), () => console.log(this.state.cities));\n    };\n\n    this.addCity = addCity => addCity;\n\n    this.state = {\n      cities: ''\n    };\n  }\n\n  componentDidMount() {\n    FetchOpenWeather();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(WeatherShow, {\n      newCity: this.newCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(InputCity, {\n      newCity: () => this.newCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/brusnichkin/Project/LAD/weather-widget/src/App.js"],"names":["React","Component","Wrapper","WeatherShow","InputCity","FetchOpenWeather","App","constructor","props","newCity","userCity","setState","prevState","cities","state","console","log","addCity","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AAGA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAEzCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAWnBC,OAXmB,GAWRC,QAAD,IAAY;AACpB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBC,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD;AADK,OAAL,CAAvB,EAGA,MAAME,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,MAAvB,CAHN;AAID,KAhBkB;;AAAA,SAiBnBI,OAjBmB,GAiBRA,OAAD,IAAWA,OAjBF;;AAEjB,SAAKH,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,gBAAgB;AACjB;;AAUDc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAI,KAAKV,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAI,MAAI,KAAKA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5BwC","sourcesContent":["import React, {Component} from 'react';\nimport Wrapper from './Wrapper/Wrapper';\nimport WeatherShow from './WeatherShow/WeatherShow'\nimport InputCity from './InputCity/InputCity'\nimport FetchOpenWeather from './FetchOpenWeather/FetchOpenWeather'\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super()\n    this.state = {\n      cities: ''\n    }\n  }\n\n  componentDidMount() {\n    FetchOpenWeather()\n  }\n\n  newCity = (userCity)=>{\n    this.setState(prevState => ({\n        cities: this.state.cities\n    }),\n    () => console.log(this.state.cities))\n  }\n  addCity = (addCity)=>addCity\n\n  render() {\n    return (\n      <Wrapper>\n        <WeatherShow newCity = {this.newCity}/>\n        <InputCity newCity = {()=>this.newCity}/>\n      </Wrapper>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}